name: Python Package CI/CD for modulink-py

on:
  push:
    branches:
      - main # Or your primary branch
    paths:
      - 'modulink-py/**'
      - '.github/workflows/python-publish.yml'
  release:
    types: [published]

jobs:
  lint-and-test:
    name: Lint & Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./modulink-py
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .[dev]

      - name: Lint with Flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test
        run: python run_tests.py # Or use 'pytest' if preferred

  build:
    name: Build Python Package
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' || (github.event_name == 'release' && github.event.payload.release.body != null && contains(github.event.payload.release.body, 'modulink-py'))
    defaults:
      run:
        working-directory: ./modulink-py

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python for building
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Store built distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: modulink-py/dist/

  publish-to-pypi:
    name: Publish package to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'release' && github.event.payload.release.body != null && contains(github.event.payload.release.body, 'modulink-py'))
    # No GitHub environment needed if using API token directly
    # permissions: # Not needed for API token method

    steps:
      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # repository_url: https://test.pypi.org/legacy/ # Uncomment to publish to TestPyPI
          # skip_existing: true # Uncomment to skip if version already exists
          packages_dir: dist/
